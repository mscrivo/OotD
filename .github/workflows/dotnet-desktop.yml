name: Build and Sign

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest
    
    env:
     VERSION: '4.3.${{ github.run_number }}'

    steps:
    - name: Output Run ID
      run: echo ${{ github.run_id }}
    - name: Output Run Number
      run: echo ${{ github.run_number }}
    - name: Output Run Attempt
      run: echo ${{ github.run_attempt }}
    
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'true'
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:        
        dotnet-version: 9.0.x

    - name: Build the app
      run: dotnet build --configuration $env:Configuration -p:Version=$(MAJOR_MINOR_VERSION);FileVersion=$(MAJOR_MINOR_VERSION)
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Sign the application
      uses: GabrielAcostaEngler/signtool-code-sign@1.0.6
      with:
        certificate: '${{ secrets.BASE64_ENCODED_PFX }}'
        cert-password: '${{ secrets.PFX_PASSWORD }}'
        cert-sha1: '${{ secrets.CERT_HASH_SHA1 }}'
        # path to folder containing files to sign.
        folder: 'OotD.Launcher\bin\Release\net9.0-windows7.0'
        recursive: true
        timestamp-server: 'http://timestamp.digicert.com'

    - name: Build Installer
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.5
      with:
        path: "Setup Script.iss"
        options: /O+        

    #- name: Upload build artifacts
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: MSIX Package
    #    path: ${{ env.Wap_Project_Directory }}\AppPackages
