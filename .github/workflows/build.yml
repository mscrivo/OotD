name: Build, Sign and Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest
    
    env:
     VERSION: '4.3.${{ github.run_number }}'

    steps:    
    - name: Checkout
      uses: actions/checkout@v5
      with:
        submodules: 'true'
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v5
      with:        
        dotnet-version: 10.0.100-rc.1.25451.107

    - name: Build the app
      run: dotnet build OutlookDesktop.sln --configuration $env:Configuration -p:Version=${{ env.VERSION }} -p:FileVersion=${{ env.VERSION }}
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Run tests with coverage
      run: |
        dotnet test OutlookDesktop.sln --configuration $env:Configuration --collect:"XPlat Code Coverage" --settings coverlet.runsettings --results-directory ./TestResults --logger trx --verbosity normal
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Generate coverage report
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator -reports:"TestResults/**/coverage.cobertura.xml" -targetdir:"CoverageReport" -reporttypes:"Html;Cobertura"

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: CoverageReport

    - name: Sign App Files
      uses: mscrivo/signtool-code-sign@v1.2.2
      with:
        certificate: '${{ secrets.BASE64_ENCODED_PFX }}'
        cert-password: '${{ secrets.PFX_PASSWORD }}'
        cert-sha1: '${{ secrets.CERT_HASH_SHA1 }}'
        # path to folder containing files to sign.
        folder: 'OotD.Launcher\bin\Release\net10.0-windows7.0'
        recursive: true
        timestamp-server: 'http://timestamp.digicert.com'

    - name: Build Installer
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.7
      with:
        path: "Setup Script.iss"
        options: /O+
        
    - name: Sign Installer
      uses: mscrivo/signtool-code-sign@v1
      with:
        certificate: '${{ secrets.BASE64_ENCODED_PFX }}'
        cert-password: '${{ secrets.PFX_PASSWORD }}'
        cert-sha1: '${{ secrets.CERT_HASH_SHA1 }}'
        # path to folder containing files to sign.
        folder: 'ServerStaging'
        recursive: false
        timestamp-server: 'http://timestamp.digicert.com'        

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Installer
        path: ServerStaging

